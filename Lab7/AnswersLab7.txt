Answers for Lab 7
-----------------------------------------------



EXERCISE 1

1. Which methods in the DLQueue class are taking in a parameter of the generic type T?

The method enqueue()

2. Which methods in the DLQueue class have a return type of the generic type T?

The methods dequeue() and first()

3. Suppose you didn't have an instance variable storing the current number of elements in the queue. How could you determine the number of elements for the size() method if such an instance variable was not available?

If we didnt have the count variable to keep track of the number of elements, we could traverse the queue starting from the frint and count the nodes one by one until we reach the end of the queue.

EXERCISE 2

4. Consider the possibility of using an Array Queue or a Circular Array Queue instead of the Doubly Linked Queue being used in this simulation. Would the simulation's results be impacted by switching to a different Queue implementation?

It will not impact the logical results of the simulation, as the queue operation (enqueue and dequeu) will reamin the same.

5. Which line(s) of code in Snail.java and/or SnailRace.java would you have to modify if you were going to use a different queue implementation?

In Snail.java line 9 (movePattern = new DLQueue<>()) and change it to new ArrayQueue<>(size) or new CircularArrayQueue<>(size)



